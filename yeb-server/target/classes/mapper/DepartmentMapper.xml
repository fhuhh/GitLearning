<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.server.mapper.DepartmentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.server.pojo.Department">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="parentId" property="parentId" />
        <result column="depPath" property="depPath" />
        <result column="enabled" property="enabled" />
        <result column="isParent" property="isParent" />
    </resultMap>

    <resultMap id="DepartmentWithChildren" type="com.example.server.pojo.Department" extends="BaseResultMap">
<!--        这种递归方式才是求套中套的最好方式-->
        <collection property="children" ofType="com.example.server.pojo.Department" select="com.example.server.mapper.DepartmentMapper.getAllDepartments" column="id"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, name, parentId, depPath, enabled, isParent
    </sql>
    <select id="deleteDepartment" statementType="CALLABLE">
        call deleteDep(#{id,mode=IN,jdbcType=INTEGER},#{result,mode=OUT,jdbcType=INTEGER})
    </select>
    <select id="addDepartment" statementType="CALLABLE">
        call addDep(#{name,mode=IN,jdbcType=VARCHAR}
            ,#{parentId,mode=IN,jdbcType=INTEGER}
            ,#{enabled,mode=IN,jdbcType=BOOLEAN}
            ,#{result,mode=OUT,jdbcType=INTEGER}
            ,#{id,mode=OUT,jdbcType=INTEGER})
    </select>
    <select id="getAllDepartments" resultMap="DepartmentWithChildren">
        select
        <include refid="Base_Column_List"/>
        from t_department
        where parentId=#{parentId}
    </select>

</mapper>
